
--------------------- Step-1 ---------------------
PUT _cluster/settings
{
  "persistent": {
    "plugins.ml_commons.only_run_on_ml_node": "false",
    "plugins.ml_commons.native_memory_threshold": "99"
  }
}

--------------------- Step-2 ---------------------
POST /_plugins/_ml/models/_register?deploy=true
{
  "name": "huggingface/sentence-transformers/all-distilroberta-v1",
  "version": "1.0.1",
  "model_format": "TORCH_SCRIPT"
}


--------------------- Step-3 ---------------------
GET /_plugins/_ml/models/_search
{
  "query": {
    "match": {
      "name": "sentence-transformers/all-distilroberta-v1"
    }
  }
}

--------------------- Step-3.1 ---------------------
GET /_plugins/_ml/models/XWbtlJkBrC5Xn29FOi5n


GET /_plugins/_ml/tasks/R10elJkByjMWPGFjNNOV


--------------------- Step-4 ---------------------
PUT my-vector-index
{
  "settings": {
    "number_of_shards": 1,
    "number_of_replicas": 0
  },
  "mappings": {
    "properties": {
      "field1": { "type": "text" },
      "vector_field": { "type": "dense_vector", "dims": 1536 }
    }
  }
}

--------------------- Step-5 ---------------------
PUT my-vector-index
{
  "settings": {
    "index": {
      "knn": true,
      "knn.algo_param.ef_search": 100,
      "number_of_shards": 1,
      "number_of_replicas": 0
    }
  },
  "mappings": {
    "properties": {
      "department_name": {
        "type": "text",
        "analyzer": "standard"
      },
      "department_id": {
        "type": "keyword"
      },
      "keywords": {
        "type": "text",
        "analyzer": "standard"
      },
      "description": {
        "type": "text",
        "analyzer": "standard"
      },
      "category": {
        "type": "keyword"
      },
      "department_vector": {
        "type": "knn_vector",
        "dimension": 768,
        "method": {
          "name": "hnsw",
          "space_type": "cosinesimil",
          "engine": "lucene",
          "parameters": {
            "ef_construction": 256,
            "m": 16
          }
        }
      }
    }
  }
}

--------------------- Step-6 [Replace model id] ---------------------
PUT _ingest/pipeline/text-embedding-pipeline
{
  "description": "Title & Content embedding pipeline",
  "processors": [
    {
      "text_embedding": {
        "model_id": "HqGbrZkBFFxNQDhxa79M",
        "field_map": {
          "title": "title_vector",
          "content": "content_vector"
        }
      }
    },
    {
      "remove": {
        "field": ["title", "content"]
      }
    }
  ]
}
--------------------- Step-7 [Schema] ---------------------
# Create the resumes index with custom analyzers and mappings
DELETE /resumes
PUT /resumes
{
  "settings": {
    "analysis": {
      "analyzer": {
        "resume_analyzer": {
          "type": "custom",
          "tokenizer": "standard",
          "filter": [
            "lowercase",
            "resume_synonyms",
            "edge_ngram_filter"
          ]
        },
        "search_analyzer": {
          "type": "custom",
          "tokenizer": "standard",
          "filter": [
            "lowercase",
            "resume_synonyms"
          ]
        }
      },
      "filter": {
        "resume_synonyms": {
          "type": "synonym",
          "synonyms": [
            "ai => artificial intelligence",
            "ml => machine learning",
            "nlp => natural language processing",
            "ui => user interface",
            "ux => user experience",
            "pm => project management, product management",
            "hr => human resources",
            "js => javascript",
            "py => python",
            "aws => amazon web services",
            "gcp => google cloud platform",
            "azure => microsoft azure",
            "cs => computer science",
            "it => information technology",
            "db => database",
            "dba => database administrator",
            "sde => software development engineer",
            "dev => developer, development",
            "qa => quality assurance",
            "ba => business analyst",
            "da => data analyst",
            "ds => data science, data scientist"
          ]
        },
        "edge_ngram_filter": {
          "type": "edge_ngram",
          "min_gram": 2,
          "max_gram": 20
        }
      }
    },
    "number_of_shards": 5,
    "number_of_replicas": 1
  },
  "mappings": {
    "properties": {
      "candidate_name": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
      "date_of_birth": { "type": "date", "ignore_malformed": true },
      "address": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
      "city": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
      "current_location": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
      "age": { "type": "integer" },
      "email": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
      "gender": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
      "mobile_number": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
      "industry": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
      "role": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
      "total_experience": { "type": "float" },
      "department": {
        "type": "nested",
        "properties": {
          "department": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
          "role": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
          "fullString": { "type": "text" }
        }
      },
      "skills": {
        "type": "nested",
        "properties": {
          "skill_name": {
            "type": "text",
            "analyzer": "resume_analyzer",
            "search_analyzer": "search_analyzer",
            "fields": {
              "keyword": { "type": "keyword", "ignore_above": 256 },
              "suggest": { "type": "completion", "analyzer": "simple", "preserve_separators": true, "preserve_position_increments": true, "max_input_length": 50 },
              "searchable": { "type": "search_as_you_type", "doc_values": false, "max_shingle_size": 3 }
            }
          },
          "skill_type": { "type": "text" }
        }
      },
      "certificates": {
        "type": "nested",
        "properties": {
          "certificate_name": {
            "type": "text",
            "analyzer": "resume_analyzer",
            "search_analyzer": "search_analyzer",
            "fields": {
              "keyword": { "type": "keyword", "ignore_above": 256 },
              "suggest": { "type": "completion", "analyzer": "simple", "preserve_separators": true, "preserve_position_increments": true, "max_input_length": 50 }
            }
          },
          "issue_date": { "type": "date", "ignore_malformed": true },
          "provider": {
            "type": "text",
            "analyzer": "resume_analyzer",
            "search_analyzer": "search_analyzer",
            "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } }
          }
        }
      },
      "education": {
        "type": "nested",
        "properties": {
          "course_name": { "type": "text", "analyzer": "resume_analyzer", "search_analyzer": "search_analyzer", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 }, "suggest": { "type": "completion", "analyzer": "simple" } } },
          "from": { "type": "date", "ignore_malformed": true },
          "to": { "type": "date", "ignore_malformed": true },
          "school_college_name": { "type": "text", "analyzer": "resume_analyzer", "search_analyzer": "search_analyzer", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 }, "suggest": { "type": "completion", "analyzer": "simple" } } },
          "school_college_city": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
          "specialization": { "type": "text", "analyzer": "resume_analyzer", "search_analyzer": "search_analyzer", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
          "evaluation_score": { "type": "text" },
          "education_level": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } }
        }
      },
      "experience": {
        "type": "nested",
        "properties": {
          "company_name": { "type": "text", "analyzer": "resume_analyzer", "search_analyzer": "search_analyzer", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 }, "suggest": { "type": "completion", "analyzer": "simple", "preserve_separators": true, "preserve_position_increments": true, "max_input_length": 50 } } },
          "role_position": { "type": "text", "analyzer": "resume_analyzer", "search_analyzer": "search_analyzer", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 }, "suggest": { "type": "completion", "analyzer": "simple", "preserve_separators": true, "preserve_position_increments": true, "max_input_length": 50 } } },
          "from": { "type": "date", "ignore_malformed": true },
          "to": { "type": "date", "ignore_malformed": true },
          "current_position": { "type": "boolean" },
          "location": { "type": "text", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
          "project_department": { "type": "text", "analyzer": "resume_analyzer", "search_analyzer": "search_analyzer", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
          "job_description": { "type": "text", "analyzer": "resume_analyzer", "search_analyzer": "search_analyzer", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } },
          "url": { "type": "text" }
        }
      },
      "projects": {
        "type": "nested",
        "properties": {
          "project_name": { "type": "text" },
          "role_position": { "type": "text" },
          "from": { "type": "date", "ignore_malformed": true },
          "to": { "type": "date", "ignore_malformed": true },
          "description": { "type": "text" },
          "technologies": { "type": "text" },
          "url": { "type": "text" }
        }
      },
      "accomplishments": {
        "type": "nested",
        "properties": {
          "accomplishment": { "type": "text" },
          "when": { "type": "date", "ignore_malformed": true },
          "url": { "type": "text" },
          "description": { "type": "text" }
        }
      }
    }
  }
}








